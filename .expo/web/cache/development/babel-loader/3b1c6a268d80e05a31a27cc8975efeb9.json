{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar } from \"react-native-elements\";\nimport { Input, Button } from 'react-native-elements';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CadastroScreen = function CadastroScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    getNome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    getCpf = _useState4[0],\n    setCpf = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    getTelefone = _useState6[0],\n    setTelefone = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    getId = _useState8[0],\n    setId = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    getAlterar = _useState10[0],\n    setAlterar = _useState10[1];\n  useEffect(function () {\n    if (route.params) {\n      var nome = route.params.nome;\n      var telefone = route.params.telefone;\n      var cpf = route.params.cpf;\n      var id = route.params.id;\n      setNome(nome);\n      setTelefone(telefone);\n      setCpf(cpf);\n      setId(id);\n    }\n  }, []);\n  function inserirDados() {\n    return _inserirDados.apply(this, arguments);\n  }\n  function _inserirDados() {\n    _inserirDados = _asyncToGenerator(function* () {\n      axios.post('http://professornilson.com/testeservico/clientes', {\n        nome: getNome,\n        telefone: getTelefone,\n        cpf: getCpf\n      }).then(function (response) {\n        setNome('');\n        setCpf('');\n        setTelefone('');\n        showMessage({\n          message: \"Registro Cadastrado com sucesso\",\n          type: \"success\"\n        });\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    });\n    return _inserirDados.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: [styles.container, {\n      flexDirection: \"column\"\n    }],\n    children: [_jsx(View, {\n      style: {\n        flex: 0.5,\n        backgroundColor: \"#00A8FF\",\n        alignItems: \"center\"\n      },\n      children: _jsxs(Text, {\n        h1: true,\n        style: {\n          fontSize: 30,\n          color: \"white\"\n        },\n        children: [_jsx(Icon, {\n          onPress: function onPress() {\n            return navigation.navigate('Login');\n          },\n          name: \"arrow-left\",\n          size: 30,\n          color: \"white\"\n        }), \"Usu\\xE1rio\"]\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 3,\n        backgroundColor: \"white\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          paddingTop: 30,\n          textAlign: \"left\"\n        },\n        children: \"Nome\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: ''\n        },\n        textAlign: \"center\",\n        onChangeText: function onChangeText(text) {\n          return setNome(text);\n        },\n        value: getNome\n      }), _jsx(Text, {\n        style: {\n          paddingTop: 30,\n          textAlign: \"left\"\n        },\n        children: \"Cpf\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: ''\n        },\n        textAlign: \"center\",\n        onChangeText: function onChangeText(text) {\n          return setCpf(text);\n        },\n        value: getCpf\n      }), _jsx(Text, {\n        style: {\n          paddingTop: 30,\n          textAlign: \"left\"\n        },\n        children: \"Email\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: ''\n        },\n        textAlign: \"center\",\n        onChangeText: function onChangeText(text) {\n          return setCpf(text);\n        },\n        value: getEmail\n      }), _jsx(Text, {\n        children: \"Senha\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        secureTextEntry: true,\n        textAlign: \"center\"\n      })]\n    }), _jsx(View, {\n      style: {\n        top: \"80px\",\n        flex: 2\n      },\n      children: _jsx(Button, {\n        title: \"< Voltar\",\n        onPress: function onPress() {\n          return navigation.navigate('Lista de Contatos');\n        }\n      })\n    }), !getAlterar ? _jsx(Button, {\n      style: {\n        paddingTop: 20\n      },\n      title: \"Salvar\",\n      style: styles.botao,\n      onPress: function onPress() {\n        return inserirDados();\n      }\n    }) : null]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  botao: {\n    paddingTop: 20,\n    width: 300\n  }\n});\nexport default CadastroScreen;","map":{"version":3,"names":["React","useState","useEffect","Avatar","Input","Button","NavigationContainer","createNativeStackNavigator","Icon","axios","CadastroScreen","route","navigation","getNome","setNome","getCpf","setCpf","getTelefone","setTelefone","getId","setId","getAlterar","setAlterar","params","nome","telefone","cpf","id","inserirDados","post","then","response","showMessage","message","type","console","log","catch","error","styles","container","flexDirection","flex","backgroundColor","alignItems","fontSize","color","navigate","paddingTop","textAlign","name","text","getEmail","top","botao","StyleSheet","create","padding","width"],"sources":["C:/Users/Vinìcius Marcos/Desktop/IFPE 22/MOBILE/mobile/screens/cadastrousuario.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { Input, Button } from 'react-native-elements';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst CadastroScreen = ({route, navigation}) => {  \r\n\r\nconst [getNome,setNome] = useState();\r\nconst [getCpf,setCpf] = useState();\r\nconst [getTelefone,setTelefone] = useState();\r\nconst [getId,setId] = useState();\r\nconst [getAlterar,setAlterar] = useState();\r\n\r\nuseEffect(()=>{\r\n    if(route.params){\r\n        const { nome } =  route.params \r\n        const { telefone } =  route.params \r\n        const { cpf } =  route.params \r\n        const { id } =  route.params\r\n        \r\n\r\n        setNome(nome)\r\n        setTelefone(telefone)\r\n        setCpf(cpf)\r\n        setId(id)\r\n       \r\n    }\r\n\r\n},[]) \r\n\r\nasync function inserirDados(){\r\n        \r\n    axios.post('http://professornilson.com/testeservico/clientes', {\r\n        nome: getNome,\r\n        telefone: getTelefone,\r\n        cpf: getCpf\r\n      })\r\n      .then(function (response) {\r\n        setNome('');\r\n        setCpf('');\r\n        setTelefone(''); \r\n        showMessage({\r\n            message: \"Registro Cadastrado com sucesso\",\r\n            type: \"success\",\r\n          }); \r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });     \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n    return (\r\n      <View style={[styles.container, {\r\n        flexDirection: \"column\"\r\n      }]}>\r\n  \r\n        <View style={{ flex: 0.5, backgroundColor: \"#00A8FF\", alignItems: \"center\", }}>\r\n  \r\n          <Text h1 style={{fontSize:30, color:\"white\"}}>  \r\n          <Icon onPress={()=>navigation.navigate('Login')} \r\n             name='arrow-left'\r\n             size={30}\r\n             color='white'\r\n           />Usuário\r\n          </Text>\r\n\r\n          </View>\r\n\r\n          <View style={{ flex: 3, backgroundColor: \"white\" }}>\r\n       \r\n        <Text style={{ paddingTop: 30, textAlign: \"left\" }}>Nome</Text>\r\n            <Input\r\n              placeholder=''\r\n              leftIcon={{ type: 'font-awesome', name: '' }}\r\n              textAlign=\"center\"\r\n              onChangeText={text => setNome(text)}\r\n              value={getNome}\r\n            />\r\n  \r\n            <Text style={{ paddingTop: 30, textAlign: \"left\" }}>Cpf</Text>\r\n            <Input\r\n              placeholder=''\r\n              leftIcon={{ type: 'font-awesome', name: '' }}\r\n              textAlign=\"center\"\r\n              onChangeText={text => setCpf(text)}\r\n              value={getCpf}\r\n            />\r\n\r\n\r\n            <Text style={{ paddingTop: 30, textAlign: \"left\" }}>Email</Text>\r\n            <Input\r\n              placeholder=''\r\n              leftIcon={{ type: 'font-awesome', name: '' }}\r\n              textAlign=\"center\"\r\n              onChangeText={text => setCpf(text)}\r\n              value={getEmail}\r\n            />\r\n            <Text>Senha</Text>\r\n            <Input placeholder=\"\" secureTextEntry={true}\r\n              textAlign=\"center\"\r\n            />\r\n          \r\n  \r\n        </View>\r\n  \r\n  \r\n       \r\n      <View style={{top:\"80px\", flex: 2 }} >\r\n\r\n{/* <Button title=\"Salvar\"  style={{ paddingTop: 10 }} /> */}\r\n<Button  \r\n            title=\"< Voltar\"\r\n            onPress={()=>navigation.navigate('Lista de Contatos')}\r\n            ></Button>\r\n\r\n\r\n</View> \r\n\r\n\r\n{ !getAlterar ? (\r\n    <Button style={{paddingTop:20}}\r\n    title=\"Salvar\"\r\n    style={styles.botao}\r\n    onPress={() => inserirDados()}\r\n    />\r\n    ):null}\r\n\r\n   \r\n      </View> \r\n    );\r\n  };\r\n  \r\n\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      padding: 20,\r\n    },\r\n\r\n    botao:{\r\n      paddingTop:20,\r\n      width:300\r\n    }\r\n  });\r\n\r\n\r\n  export default CadastroScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}