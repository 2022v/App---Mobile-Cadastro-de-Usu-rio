{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar } from \"react-native-elements\";\nimport { Input, Button } from 'react-native-elements';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CadastroContatosScreen = function CadastroContatosScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    getNome = _useState2[0],\n    setNome = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    getCpf = _useState4[0],\n    setCpf = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    getTelefone = _useState6[0],\n    setTelefone = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    getEmail = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(),\n    _useState10 = _slicedToArray(_useState9, 2),\n    getId = _useState10[0],\n    setId = _useState10[1];\n  var _useState11 = useState(),\n    _useState12 = _slicedToArray(_useState11, 2),\n    getAlterar = _useState12[0],\n    setAlterar = _useState12[1];\n  useEffect(function () {\n    if (route.params) {\n      var nome = route.params.nome;\n      var telefone = route.params.telefone;\n      var email = route.params.email;\n      var cpf = route.params.cpf;\n      var id = route.params.id;\n      var alterar = route.params.alterar;\n      setNome(nome);\n      setTelefone(telefone);\n      setEmail(email);\n      setCpf(cpf);\n      setId(id);\n      setAlterar(alterar);\n    }\n  }, []);\n  function inserirDados() {\n    return _inserirDados.apply(this, arguments);\n  }\n  function _inserirDados() {\n    _inserirDados = _asyncToGenerator(function* () {\n      yield axios.post('http://professornilson.com/testeservico/clientes', {\n        nome: getNome,\n        telefone: getTelefone,\n        cpf: getCpf\n      }).then(function (response) {\n        setNome('');\n        setCpf('');\n        setTelefone('');\n        alert(\"foi\");\n      }).catch(function (error) {\n        alert(\"erro\");\n        console.log(error);\n      });\n    });\n    return _inserirDados.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: [styles.container, {\n      flexDirection: \"column\"\n    }],\n    children: [_jsx(View, {\n      style: {\n        flex: 0.5,\n        backgroundColor: \"#00A8FF\",\n        alignItems: \"center\"\n      },\n      children: _jsxs(Text, {\n        h1: true,\n        style: {\n          fontSize: 30,\n          color: \"white\"\n        },\n        children: [_jsx(Icon, {\n          onPress: function onPress() {\n            return navigation.navigate('Lista de Contatos');\n          },\n          name: \"arrow-left\",\n          size: 30,\n          color: \"white\"\n        }), \"Contato\"]\n      })\n    }), _jsxs(View, {\n      style: {\n        flex: 3,\n        backgroundColor: \"white\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          paddingTop: 30,\n          textAlign: \"left\"\n        },\n        children: \"Nome\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: ''\n        },\n        textAlign: \"center\",\n        onChangeText: function onChangeText(text) {\n          return setNome(text);\n        },\n        value: getNome\n      }), _jsx(Text, {\n        style: {\n          paddingTop: 30,\n          textAlign: \"left\"\n        },\n        children: \"Telefone\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: ''\n        },\n        textAlign: \"center\",\n        onChangeText: function onChangeText(text) {\n          return setTelefone(text);\n        },\n        value: getTelefone\n      }), _jsx(Text, {\n        style: {\n          paddingTop: 30,\n          textAlign: \"left\"\n        },\n        children: \"Email\"\n      }), _jsx(Input, {\n        placeholder: \"\",\n        leftIcon: {\n          type: 'font-awesome',\n          name: ''\n        },\n        textAlign: \"center\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        },\n        value: getEmail\n      })]\n    }), _jsx(Button, {\n      style: {\n        paddingTop: 20\n      },\n      title: \"< Voltar\",\n      onPress: function onPress() {\n        return navigation.navigate('ListaContatos');\n      }\n    }), !getAlterar ? _jsx(Button, {\n      style: {\n        paddingTop: 20\n      },\n      title: \"Salvar\",\n      onPress: function onPress() {\n        return inserirDados();\n      }\n    }) : null]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  }\n});\nexport default CadastroContatosScreen;","map":{"version":3,"names":["React","useState","useEffect","Avatar","Input","Button","NavigationContainer","createNativeStackNavigator","Icon","axios","CadastroContatosScreen","route","navigation","getNome","setNome","getCpf","setCpf","getTelefone","setTelefone","getEmail","setEmail","getId","setId","getAlterar","setAlterar","params","nome","telefone","email","cpf","id","alterar","inserirDados","post","then","response","alert","catch","error","console","log","styles","container","flexDirection","flex","backgroundColor","alignItems","fontSize","color","navigate","paddingTop","textAlign","type","name","text","StyleSheet","create","padding"],"sources":["C:/Users/VinÃ¬cius Marcos/Desktop/IFPE 22/MOBILE/mobile/screens/cadastrocontato.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Avatar } from \"react-native-elements\";\r\nimport { Input, Button } from 'react-native-elements';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport axios from 'axios';\r\n\r\n \r\n const CadastroContatosScreen = ({route, navigation}) => {\r\n\r\n  const [getNome,setNome] = useState();\r\nconst [getCpf,setCpf] = useState();\r\nconst [getTelefone,setTelefone] = useState();\r\nconst [getEmail,setEmail] = useState();\r\nconst [getId,setId] = useState();\r\nconst [getAlterar,setAlterar] = useState();\r\n\r\nuseEffect(()=>{\r\n  if(route.params){\r\n      const { nome } =  route.params \r\n      const { telefone } =  route.params \r\n      const { email } =  route.params \r\n      const { cpf } =  route.params \r\n      const { id } =  route.params\r\n      const { alterar } =  route.params\r\n      \r\n\r\n      setNome(nome)\r\n      setTelefone(telefone)\r\n      setEmail(email)\r\n      setCpf(cpf)\r\n      setId(id)\r\n      setAlterar(alterar)\r\n     \r\n  }\r\n\r\n},[]) \r\n\r\nasync function inserirDados(){\r\n        \r\n  await axios.post('http://professornilson.com/testeservico/clientes', {\r\n      nome: getNome,\r\n      telefone: getTelefone,\r\n      cpf: getCpf\r\n    })\r\n    .then(function (response) {\r\n      setNome('');\r\n      setCpf('');\r\n      setTelefone(''); \r\n      alert(\"foi\");\r\n    })\r\n    .catch(function (error) {\r\n      alert(\"erro\");\r\n      console.log(error)\r\n    });     \r\n  \r\n}\r\n\r\n\r\n    \r\n    return (\r\n      <View style={[styles.container, {\r\n        flexDirection: \"column\"\r\n      }]}>\r\n  \r\n        <View style={{ flex: 0.5, backgroundColor: \"#00A8FF\", alignItems: \"center\", }}>\r\n  \r\n          <Text h1 style={{fontSize:30, color:\"white\"}}>  \r\n          <Icon onPress={()=>navigation.navigate('Lista de Contatos')} \r\n             name='arrow-left'\r\n             size={30}\r\n             color='white'\r\n           />Contato\r\n          </Text>\r\n\r\n          </View>\r\n\r\n          <View style={{ flex: 3, backgroundColor: \"white\" }}>\r\n       \r\n        <Text style={{ paddingTop: 30, textAlign: \"left\" }}>Nome</Text>\r\n            <Input\r\n              placeholder=''\r\n              leftIcon={{ type: 'font-awesome', name: '' }}\r\n              textAlign=\"center\"\r\n              onChangeText={text => setNome(text)}\r\n              value={getNome}\r\n            />\r\n\r\n          <Text style={{ paddingTop: 30, textAlign: \"left\" }}>Telefone</Text>\r\n            <Input\r\n              placeholder=''\r\n              leftIcon={{ type: 'font-awesome', name: '' }}\r\n              textAlign=\"center\"\r\n              onChangeText={text => setTelefone(text)}\r\n              value={getTelefone}\r\n            />\r\n\r\n          <Text style={{ paddingTop: 30, textAlign: \"left\" }}>Email</Text>\r\n            <Input\r\n              placeholder=''\r\n              leftIcon={{ type: 'font-awesome', name: '' }}\r\n              textAlign=\"center\"\r\n              onChangeText={text => setEmail(text)}\r\n              value={getEmail}\r\n            />\r\n \r\n\r\n        \r\n        </View>\r\n  \r\n  \r\n       \r\n        <Button  style={{paddingTop:20}}\r\n            title=\"< Voltar\"\r\n            onPress={()=>navigation.navigate('ListaContatos')}\r\n            ></Button>\r\n\r\n\r\n{ !getAlterar ? (\r\n    <Button style={{paddingTop:20}}\r\n    title=\"Salvar\"\r\n    onPress={() => inserirDados()}\r\n    />\r\n    ):null}\r\n\r\n\r\n\r\n\r\n</View>\r\n  );\r\n};\r\n  \r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      padding: 20,\r\n    },\r\n  });\r\n\r\n  export default CadastroContatosScreen; \r\n\r\n\r\n   "],"mappings":"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"},"metadata":{},"sourceType":"module"}